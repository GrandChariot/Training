2-3. 컴퓨터 성능 향상 기술(2) - 인터럽트


3. 인터럽트
메모리에 대해 배울 때 '인터럽트'에 대해서도 들어본 바가 있다.
바로 작업이 경계 레지스터와 한계 레지스터 사이가 아닌 다른 곳에서 일어날 때 인터럽트가 발생하고,
인터럽트가 발생하면 해당 프로그램이 종료된다는 내용이었다.
그런데 인터럽트가 대체 뭘까?

예전에는 CPU가 직접 입출력장치로부터 데이터를 가져오고 내보냈다.
하지만 요즘 CPU는 할 일도 많고 바쁜데에다가 입출력도 너무 많아서 그런 잡일을 시킬 순 없다.
그래서 새로이 탄생한 것이 바로 '입출력 관리자' 또는 '장치 관리자'이다.
(주변장치에 문제가 생겼을 때 '장치 관리자'를 만져본 경험은 누구나 있을 것이다!)

1. CPU가 입출력 관리자에게 입출력 명령을 내린다.(한 번에 여러 개 내릴 수도 있다.)
2. 입출력 관리자는 명령받은 데이터를 가져오거나 출력한다.
3. 모든 작업이 완료되면 입출력 관리자는 CPU에게 완료 신호를 보낸다.

CPU 입장에서는 일일이 데이터 입출력에 관여할 필요가 없이 시작 명령을 내리고 종료 보고만 받으면 된다.
그런데 이 '종료 보고'의 방식이 바로 '인터럽트'다!

CPU가 종료 보고를 받으면 하던 일을 멈추고 입출력 관리자가 물어온 데이터를 처리한다.
하던 작업을 중단하기 때문에 인터럽트(방해)라는 이름이 붙었다.


인터럽트와 세트로 묶어서 꼭 기억해야하는 개념이 있는데, '직접 메모리 접근'이다.
원래 메모리나 주변장치에 대해 모든 접근 권한을 가진 건 오로지 CPU 뿐이었다.
그러나 지금은 입출력 관리자도 CPU의 허락을 맡아 직접 메모리에 접근할 수 있다.

문제는 입출력을 통해 들어온 데이터가 CPU가 직접 사용하는 데이터와 섞이면 관리가 힘들어진다.
그래서 생겨난 게, 일반 작업 영역과 입출력을 위한 메모리 공간을 분리하는 것이다.
이를 '메모리 매핑 입출력'이라고 한다.

마지막으로 CPU와 입출력 관리자가 동시에 메모리에 접근하려 할 때 어떻게 될까?
이때에는 속도가 빠른 CPU가 속도가 느린 입출력 관리자에게 순서를 양보한다.
이를 '사이클 훔치기'라고 한다.


인터럽트 관련해서는 알아야 할 게 많아서 어렵다.
'직접 메모리 접근', '메모리 매핑 입출력', '사이클 훔치기'
이 세 가지의 의미에 대해 기억할 수 있도록 노력하자.