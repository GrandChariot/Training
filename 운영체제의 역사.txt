1-2. 운영체제의 역사

1940년대에는 운영체제가 없었다.
진공관을 사용한 컴퓨터 에니악은 사람이 주판으로 계산하는 것보다는 월등히 빨랐지만
이전에 했던 것과 다른 연산을 하려면 직접 전선을 다시 연결해야 했다.

1950년대 IC(Integrated Cricuit)의 등장으로 컴퓨터의 부피는 획기적으로 작아진다.
논리회로의 사이즈가 칩 만한 사이즈로 작아졌다.
이때 드디어 미약하게나마 CPU와 메인메모리가 생겨났다.

그러나 현재와 같은 입출력장치는 없었고 입력은 천공카드 리더(OMR 비슷한 것), 출력은 프린터를 통해 이루어졌다.
천공카드는 프로그래밍의 시초가 되는데, 천공카드에 구멍을 뚫어 프로그래밍을 하면 프린터가 결과를 출력해주었다.
즉, 천공카드 하나가 하나의 소프트웨어가 된 셈이다.

이때 당시만 해도 당연히 한 번에 한 가지의 작업만 할 수 있었고, 입력한 천공카드들의 작업은 순차적으로 이루어졌다.
천공카드로 프로그램과 데이터를 한꺼번에 입력했고, 중간에 데이터를 추가하거나 수정하는 건 불가능했다.
이러한 시스템을 '일괄 작업 시스템' 또는 '일괄 처리 시스템'이라고 부른다.

비록 지금 기준으로는 상당히 원시적이지만 운영체제가 처음 등장해서 사용되었으며
메인 메모리가 운영체제의 영역과 사용자의 영역으로 나뉘는 것도 이때 처음 일어난 일이다.

1960년대에는 키보드와 모니터가 등장했다!
키보드로 인해 프로그램을 실행한 후 데이터는 언제든지 변경할 수 있게 되었으며
모니터를 통해 프로그램이 제대로 실행되고 있는지 실시간으로 확인할 수 있게 되었다.
이런 시스템을 사용자와 컴퓨터가 대화하듯 하다고 '대화형 시스템'이라고 부른다.

그런데 1960년대 후반에 아주 획기적인 시스템이 등장한다.
고가의 컴퓨터로 한 번에 한 가지 작업만 실행하는 것이 시간 낭비이기 때문에 한 번에 여러가지 작업을 하기 위한 시스템이 개발되었다.
이를 '다중 프로그래밍'이라고 하는데, 실제로 다중 프로그래밍은 여러 가지 일을 동시에 하는 것이 아니다.
사실은 몇 초마다 돌아가면서 서로 다른 프로그램들을 실행하는 건데, 이 속도가 빨라서 사람이 보기에는 전부 동시에 하는 거로 보인다.
이를 '시분할 시스템' 또는 '다중 작업'이라고 한다.
그리고 이 한 번의 시간 단위를 타임 슬라이스라고 하는데, 이는 나중에 프로세스에서 더 자세히 알아볼 것이다.

시분할 시스템의 등장으로 인해 컴퓨터 하나로 여러 가지 작업을 할 수 있게 되었을 뿐만 아니라
값비싼 컴퓨터 하나를 여러 사람이 동시에 이용할 수도 있게 되었다.

또한 60년대 후반에 드디어 C언어를 기반으로 '유닉스' 운영체제가 탄생했다.
유닉스는 심플하면서도 아주 중요한 운영체제이기 때문에 운영체제를 공부한다면 꼭 직접 만져보는 것이 좋을 듯하다.

70년대 후반에 드디어 개인용 컴퓨터 애플II가 탄생한다.(그 '스티브 잡스'의 업적이다!)
스티브 잡스의 이 위대한 업적으로 인해 소프트웨어의 발전에는 불이 붙는다.
당연히 운영체제도 소프트웨어의 한 갈래이므로 폭발적으로 생겨났으며, 그 중 개인용 컴퓨터에서 유행한 것은 MS-DOS였다.

이 시기에 나타난 또 다른 초신성이 바로 인터넷이다.
인터넷으로 인해 복잡한 계산을 위해 고가의 슈퍼 컴퓨터(메인 프레임)을 사용할 필요가 없어졌다.
여러 개의 작고 저렴한 컴퓨터들을 묶어서 하나의 시스템을 형성한 후
각각의 컴퓨터의 연산 결과를 공유해서 마치 고가의 컴퓨터처럼 빠른 작업을 하게 만든 것이 바로 '분산 시스템'이다.

90년대에는 분산 시스템의 문제를 해결하기 위해 '클라이언트/서버 시스템'이 개발된다.
분산 시스템에는 대빵이 없다. 그래서 하나의 컴퓨터라도 고장나거나, 추가되면 작업을 재분배하기가 어렵다.
그래서 작업을 요청하는 클라이언트와 작업을 수행하는 서버로 나뉘는 새로운 시스템이 개발되었다.
우리에게 익숙한 클라이언트/서버 시스템은 웹 시스템이나 온라인 게임이다.

다만 클라이언트/서버 시스템에도 치명적인 문제가 있는 게, 결국 온갖 부하가 서버 쪽으로 몰린다는 점이다.
수강신청이나 티켓팅을 할 때 수 많은 클라이언트의 요청이 몰려서 결국 서버가 다운되는 경험은 누구나 한 번쯤 해봤을 것이다.

이러한 서버 비용을 줄이기 위해 2000년대 초반에는 P2P('Peer to Peer')가 탄생한다.
음악이나 동영상같은 높은 용량을 가진 미디어들은 서버가 혼자 감당할 수가 없다.
서버를 거치지 않고 말단 노드들끼리 직접적으로 데이터를 주고받는 것이다.

이런 P2P의 대표적인 예시는 의외로 메신저다.
서버는 대화 상대가 접속되어있는지 아닌지만 체크해주고, 대화 내용은 순수하게 P2P로 주고받는 것이다.

그 이후로도 그리드 컴퓨팅, 클라우드 컴퓨팅 등 다양한 컴퓨팅 환경이 마련되었다.
특히 2006년에 개발된 클라우트 컴퓨팅은 지금은 사람들의 생활 속에 완전히 녹아들었다.
그리고 미래에는 사물 인터넷(IoT)의 시대가 올 것이다.