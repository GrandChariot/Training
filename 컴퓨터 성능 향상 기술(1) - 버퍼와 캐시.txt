2-3. 컴퓨터 성능 향상 기술(1) - 버퍼와 캐시


1. 버퍼
이전에, 외부 버스에 대한 이야기를 한 적이 있다.
유감스럽게도 외부 버스는 가장 느린 메모리에 속도가 맞춰진다.
그리고 HDD는 정말로 엄청나게 느리다.
그래서 두 장치 사이의 속도 차이를 완화하기 위해 '버퍼'라는 개념이 생겨났다.

버퍼는 C에서도 배운 적이 있지만 마치 수레와 같은 역할을 한다.
일정량의 데이터를 모아서 한 번에 전송해서 최대한 전송 횟수를 줄이는 것이다.
버퍼의 용량이 클수록, 데이터를 전달해야하는 횟수가 적어지므로 속도는 빨라진다.


2. 캐시
'캐시'는, 메모리에서 자주 쓰일 것으로 추정되는 데이터를 미리 가져와놓는('프리페치') 공간이다.
당연히 예지력이 좋을 수록 캐시의 활용도가 높다.

CPU는 필요한 데이터가 있을 때 메모리에 앞서 가까운 캐시에 먼저 접근한다.
데이터가 캐시에 있으면(캐시 히트) 가져오고, 없으면(캐시 미스) 메모리로 간다.
일반적인 컴퓨터의 캐시 히트 적중률은 무려 90%에 다다른다.

컴퓨터의 성능을 향상시키는 좋은 방법 중 하나가 캐시 히트 적중률을 올리고 캐시 용량을 늘리는 것이다.
하지만, 캐시는 무지막지하게 비싸기 때문에 단 몇 MB라도 늘리는 건 아주 까다롭다.
때문에 '지역성 이론'(가까운 데이터가 더 쓰일 가능성이 높다)을 이용하여 적중률을 올리는 게 중요하다.

그런데 여기서 한 가지 의문점이 생긴다.
캐시에 복사해둔 데이터가 변경되면, 메모리에 있는 데이터도 변경되는가?
이에 대해서는 즉시 쓰기와 지연 쓰기라는 두 가지 방법이 있다. 차이점은 이름만 봐도 알 수 있다!

캐시에도 계층구조가 있는데 레지스터와 직접 연결된 L1 캐시, 그렇지 않은 L2캐시가 있다.
L1캐시에는 명령어 캐시, 데이터 캐시가 있는데 각각 명령어 레지스터, 데이터 레지스터와 직접 연결되어있다.